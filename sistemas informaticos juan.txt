Ejercicios de creación y
actualización de repositorios

Ejercicio 1
Configurar Git definiendo el nombre del usuario, el correo
electrónico y activar el coloreado de la salida. Mostrar la
configuración final.

git config --global user.name "Tu Nombre"

git config --global user.email "tu@email.com"

git config --global color.ui auto

git config --list

Ejercicio 2
Crear un repositorio nuevo con el nombre libro y mostrar su
contenido.

mkdir libro
cd libro
git init

ls -la

Ejercicio 3
1. Comprobar el estado del repositorio.
2. Crear un fichero indice.txt con el siguiente contenido:
Capítulo 1: Introducción a Git
Capítulo 2: Flujo de trabajo básico
Capítulo 3: Repositorios remotos
3. Comprobar de nuevo el estado del repositorio.
4. Añadir el fichero a la zona de intercambio temporal.
5. Volver a comprobar una vez más el estado del repositorio.

git status

echo -e 
Capítulo 1: Introducción a Git\n
Capítulo 2: Flujo de trabajo básico\n
Capítulo 3: Repositorios remotos" > indice.txt

git status

git add indice.txt

git status

Ejercicio 4
Realizar un commit de los últimos cambios con el mensaje
“Añadido índice del libro.” y ver el estado del repositorio.

git commit -m "Añadido índice del libro."

git status

Ejercicio 5
1. Cambiar el fichero indice.txt para que contenga lo siguiente:
Capítulo 1: Introducción a Git
Capítulo 2: Flujo de trabajo básico
Capítulo 3: Gestión de ramas
Capítulo 4: Repositorios remotos
2. Mostrar los cambios con respecto a la última versión
guardada en el repositorio.
3. Hacer un commit de los cambios con el mensaje “Añadido
capítulo 3 sobre gestión de ramas”.

1. Modificar el archivo indice.txt
echo -e 
Capítulo 1: Introducción a Git\n
Capítulo 2: Flujo de trabajo básico\n
Capítulo 3: Gestión de ramas\n
Capítulo 4: Repositorios remotos" > indice.txt

git diff

git commit -m "Añadido capítulo 3 sobre gestión de ramas"

Ejercicio 6
1. Mostrar los cambios de la última versión del repositorio con
respecto a la anterior.
2. Cambiar el mensaje del último commit por “Añadido capítulo
3 sobre gestión de ramas al índice.”
3. Volver a mostrar los últimos cambios del repositorio.

git diff HEAD^ HEAD

git commit --amend -m "Añadido capítulo 3 sobre gestión de ramas al índice."
git log --oneline
